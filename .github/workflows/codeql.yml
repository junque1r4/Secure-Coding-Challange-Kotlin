name: "CodeQL Analysis"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1

    # Builds the project using Gradle.
    - name: Build
      run: ./gradlew bootJar

    # Analyzes your code with the specified queries.
    - name: Analyze
      uses: github/codeql-action/analyze@v1
      with:
        queries: "security-and-quality"
        # Path to the CodeQL database to scan.
        # Use the env.CODAQL_DATABASE environment variable to set the path to the database.
        database: ${{ env.CODEQL_DATABASE }}
        # Path to the compiled code to be analyzed.
        # Use the env.CODEQL_JAVA_CLASSPATH environment variable to set the classpath.
        # In this example, the app.jar file is located in the build/libs directory.
        # Change the path and filename to match the location of your app.jar file.
        languages: "java"
        main-language: "java"
        additional-classpath: "/github/workspace/build/libs/app.jar"

    # Uploads the results of the analysis as a GitHub Check.
    - name: Upload SARIF results
      uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to the SARIF file containing the results of the analysis.
        sarif_file: ${{ env.SARIF_FILE }}
